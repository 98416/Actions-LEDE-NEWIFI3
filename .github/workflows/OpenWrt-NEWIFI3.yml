#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

#name: OpenWrt-NEWIFI3

on:
 # push:
   # branches: 
     # - master
  #     ↑↑↑ 改成你的分支名, 一般是master
  #  schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master          
        #      ↑↑↑ 改成你的分支名, 一般是master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt       
           
      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        env:
          CONFIG_FILE: '.config'
          DIY_SH: 'diy.sh'
        run: |
          [ -e package ] && mv package openwrt/package
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          ../$DIY_SH
          make defconfig
      - name: Download package
        run: |
          cd openwrt && make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Multi-thread compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc)
      - name: Single-thread compile
        if: failure()
        run: |
          cd openwrt
          make -j1 V=s
      - name: Upload bin directory
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: OpenWrt_bin
          path: openwrt/bin

      - name: Organize files
        if: always()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$(pwd)"
      - name: Upload firmware
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: OpenWrt_NEWIFI3
          path: ${{ env.FIRMWARE }}
